import math
import matplotlib.pyplot as plt
import matplotlib as mpl

import numpy as np

def from_spherical_to_cartesian(r, theta, phi):

    x = r * math.sin(theta*3.14/180) * math.cos(phi*3.14/180)
    y = r * math.sin(theta*3.14/180) * math.sin(phi*3.14/180)
    z = r * math.cos(theta*3.14/180)

    return x, y, z



radius = 4.
x_border = []
y_border = []
for theta in range(0, int(2 * math.pi * 100), 1):

    x_border.append(radius * math.cos(theta/100.))
    y_border.append(radius * math.sin(theta/100.))
longitude = 50.

x_parallel = []
y_parallel = []
x_center = 0
y_center = 0

alpha = math.pi/6.

a_lst = []
b_lst = []
center_x_lst = []
center_y_lst = []

for latitude in range(-180,180, 10):
    x, y, z = from_spherical_to_cartesian(radius, longitude, latitude)
    center_x_lst.append(x_center)
    center_y_lst.append(y_center + radius * math.sin(latitude*math.pi*2/180.) * math.cos(alpha))

    print(x, y, z, x_center, y_center + radius * math.sin(latitude*math.pi*2/180.) * math.cos(alpha))
